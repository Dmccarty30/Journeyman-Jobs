name: Quick Coder
description: Mobile-focused code refactoring workflow for on-the-fly improvements, optimizations, and enhancements
version: 1.0.0

# Workflow Configuration for Mobile Development Refactoring
trigger:
  type: manual
  description: Manually triggered workflow for quick code modifications and refactoring

# Workflow Steps - Mobile Development Focus
steps:
  - id: analyze_codebase
    name: Analyze Mobile Codebase
    type: analysis
    agent: analyzer
    description: Comprehensive analysis of mobile code structure, dependencies, and refactoring opportunities
    inputs:
      target: workflow.input.target
      focus: mobile_development
    outputs:
      - analysis_results
      - refactoring_opportunities
      - dependency_map

  - id: mobile_refactor_design
    name: Design Mobile Refactoring Strategy
    type: design
    agent: architect
    description: Create mobile-optimized refactoring plan with performance and user experience focus
    inputs:
      analysis_results: steps.analyze_codebase.outputs.analysis_results
      refactoring_opportunities: steps.analyze_codebase.outputs.refactoring_opportunities
    outputs:
      - refactoring_plan
      - performance_optimizations
      - ux_improvements

  - id: implement_mobile_changes
    name: Implement Mobile Code Changes
    type: implementation
    agent: refactorer
    description: Execute mobile-focused refactoring with best practices and performance optimization
    inputs:
      refactoring_plan: steps.mobile_refactor_design.outputs.refactoring_plan
      target: workflow.input.target
    outputs:
      - implemented_changes
      - performance_metrics
      - updated_code

  - id: mobile_quality_validation
    name: Mobile Quality Validation
    type: validation
    agent: qa
    description: Comprehensive testing for mobile-specific requirements (responsive design, performance, accessibility)
    inputs:
      updated_code: steps.implement_mobile_changes.outputs.updated_code
      performance_metrics: steps.implement_mobile_changes.outputs.performance_metrics
    outputs:
      - test_results
      - performance_validation
      - mobile_compliance

  - id: mobile_performance_optimization
    name: Mobile Performance Optimization
    type: optimization
    agent: performance
    description: Fine-tune mobile-specific performance metrics and user experience
    inputs:
      updated_code: steps.implement_mobile_changes.outputs.updated_code
      performance_validation: steps.mobile_quality_validation.outputs.performance_validation
    outputs:
      - optimized_code
      - performance_improvements
      - optimization_metrics

# Multi-Agent Coordination
agents:
  - type: analyzer
    capabilities: [code_analysis, dependency_mapping, mobile_patterns, refactoring_identification]
    priority: high

  - type: architect
    capabilities: [mobile_architecture, performance_design, ux_optimization, refactoring_strategy]
    priority: high

  - type: refactorer
    capabilities: [mobile_refactoring, code_optimization, performance_improvement, best_practices]
    priority: critical

  - type: qa
    capabilities: [mobile_testing, responsive_validation, performance_testing, accessibility_testing]
    priority: high

  - type: performance
    capabilities: [mobile_optimization, performance_metrics, user_experience_tuning, resource_optimization]
    priority: critical

# Quality Gates - Mobile Development Focus
quality_gates:
  - step: mobile_quality_validation
    criteria:
      - test_coverage >= 80%
      - performance_score >= 85%
      - mobile_responsive: true
      - accessibility_compliant: true
    action: fail_on_missing_criteria

  - step: mobile_performance_optimization
    criteria:
      - load_time_improvement >= 20%
      - memory_usage_optimized: true
      - battery_efficiency: true
      - network_optimization: true
    action: warn_on_missing_criteria

# Output Configuration
outputs:
  workflow_id: quick_coder_mobile_refactor
  final_code: steps.mobile_performance_optimization.outputs.optimized_code
  refactoring_summary:
    - steps.analyze_codebase.outputs.analysis_results
    - steps.mobile_refactor_design.outputs.refactoring_plan
    - steps.implement_mobile_changes.outputs.performance_metrics
    - steps.mobile_quality_validation.outputs.test_results
    - steps.mobile_performance_optimization.outputs.performance_improvements
  recommendations: steps.mobile_performance_optimization.outputs.optimimization_metrics

# Error Handling
error_handling:
  strategy: graceful_degradation
  fallback_steps:
    - basic_code_analysis
    - simple_refactoring
    - basic_testing
  notifications:
    - on_failure: send_detailed_error_report
    - on_warning: send_performance_recommendations

# Performance Metrics
metrics:
  - code_quality_score
  - performance_improvement_percentage
  - mobile_compliance_score
  - refactoring_efficiency
  - user_experience_impact

# Workflow Tags
tags:
  - mobile_development
  - code_refactoring
  - performance_optimization
  - quick_coder
  - multi_agent