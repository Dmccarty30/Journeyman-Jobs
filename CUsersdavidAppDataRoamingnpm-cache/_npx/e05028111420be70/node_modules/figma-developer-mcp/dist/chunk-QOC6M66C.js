import{StdioServerTransport as Ee}from"@modelcontextprotocol/sdk/server/stdio.js";import{config as Ce}from"dotenv";import{resolve as Oe}from"path";import{config as ne}from"dotenv";import se from"yargs";import{hideBin as ae}from"yargs/helpers";import{resolve as B}from"path";function D(e){return!e||e.length<=4?"****":`****${e.slice(-4)}`}function H(e){let t=se(ae(process.argv)).options({"figma-api-key":{type:"string",description:"Figma API key (Personal Access Token)"},"figma-oauth-token":{type:"string",description:"Figma OAuth Bearer token"},env:{type:"string",description:"Path to custom .env file to load environment variables from"},port:{type:"number",description:"Port to run the server on"},json:{type:"boolean",description:"Output data from tools in JSON format instead of YAML",default:!1}}).help().version("0.4.3").parseSync(),o,n;t.env?(o=B(t.env),n="cli"):(o=B(process.cwd(),".env"),n="default"),ne({path:o,override:!0});let i={figmaApiKey:"",figmaOAuthToken:"",useOAuth:!1},r={port:3333,outputFormat:"yaml",configSources:{figmaApiKey:"env",figmaOAuthToken:"none",port:"default",outputFormat:"default",envFile:n}};return t["figma-api-key"]?(i.figmaApiKey=t["figma-api-key"],r.configSources.figmaApiKey="cli"):process.env.FIGMA_API_KEY&&(i.figmaApiKey=process.env.FIGMA_API_KEY,r.configSources.figmaApiKey="env"),t["figma-oauth-token"]?(i.figmaOAuthToken=t["figma-oauth-token"],r.configSources.figmaOAuthToken="cli",i.useOAuth=!0):process.env.FIGMA_OAUTH_TOKEN&&(i.figmaOAuthToken=process.env.FIGMA_OAUTH_TOKEN,r.configSources.figmaOAuthToken="env",i.useOAuth=!0),t.port?(r.port=t.port,r.configSources.port="cli"):process.env.PORT&&(r.port=parseInt(process.env.PORT,10),r.configSources.port="env"),t.json?(r.outputFormat="json",r.configSources.outputFormat="cli"):process.env.OUTPUT_FORMAT&&(r.outputFormat=process.env.OUTPUT_FORMAT,r.configSources.outputFormat="env"),!i.figmaApiKey&&!i.figmaOAuthToken&&(console.error("Either FIGMA_API_KEY or FIGMA_OAUTH_TOKEN is required (via CLI argument or .env file)"),process.exit(1)),e||(console.log(`
Configuration:`),console.log(`- ENV_FILE: ${o} (source: ${r.configSources.envFile})`),i.useOAuth?(console.log(`- FIGMA_OAUTH_TOKEN: ${D(i.figmaOAuthToken)} (source: ${r.configSources.figmaOAuthToken})`),console.log("- Authentication Method: OAuth Bearer Token")):(console.log(`- FIGMA_API_KEY: ${D(i.figmaApiKey)} (source: ${r.configSources.figmaApiKey})`),console.log("- Authentication Method: Personal Access Token (X-Figma-Token)")),console.log(`- PORT: ${r.port} (source: ${r.configSources.port})`),console.log(`- OUTPUT_FORMAT: ${r.outputFormat} (source: ${r.configSources.outputFormat})`),console.log()),{...r,auth:i}}import{randomUUID as le}from"node:crypto";import G from"express";import{SSEServerTransport as ce}from"@modelcontextprotocol/sdk/server/sse.js";import{StreamableHTTPServerTransport as ue}from"@modelcontextprotocol/sdk/server/streamableHttp.js";import{isInitializeRequest as pe}from"@modelcontextprotocol/sdk/types.js";import"@modelcontextprotocol/sdk/server/mcp.js";var l={isHTTP:!1,log:(...e)=>{l.isHTTP?console.log("[INFO]",...e):console.error("[INFO]",...e)},error:(...e)=>{console.error("[ERROR]",...e)}};var me=null,S={streamable:{},sse:{}};async function j(e,t){let o=G();o.use("/mcp",G.json()),o.post("/mcp",async(i,r)=>{l.log("Received StreamableHTTP request");let s=i.headers["mcp-session-id"],c;if(s&&S.streamable[s])l.log("Reusing existing StreamableHTTP transport for sessionId",s),c=S.streamable[s];else if(!s&&pe(i.body))l.log("New initialization request for StreamableHTTP sessionId",s),c=new ue({sessionIdGenerator:()=>le(),onsessioninitialized:f=>{S.streamable[f]=c}}),c.onclose=()=>{c.sessionId&&delete S.streamable[c.sessionId]},await t.connect(c);else{l.log("Invalid request:",i.body),r.status(400).json({jsonrpc:"2.0",error:{code:-32e3,message:"Bad Request: No valid session ID provided"},id:null});return}let u=null,m=i.body.params?._meta?.progressToken,a=0;m&&(l.log(`Setting up progress notifications for token ${m} on session ${s}`),u=setInterval(async()=>{l.log("Sending progress notification",a),await t.server.notification({method:"notifications/progress",params:{progress:a,progressToken:m}}),a++},1e3)),l.log("Handling StreamableHTTP request"),await c.handleRequest(i,r,i.body),u&&clearInterval(u),l.log("StreamableHTTP request handled")});let n=async(i,r)=>{let s=i.headers["mcp-session-id"];if(!s||!S.streamable[s]){r.status(400).send("Invalid or missing session ID");return}console.log(`Received session termination request for session ${s}`);try{await S.streamable[s].handleRequest(i,r)}catch(c){console.error("Error handling session termination:",c),r.headersSent||r.status(500).send("Error processing session termination")}};o.get("/mcp",n),o.delete("/mcp",n),o.get("/sse",async(i,r)=>{l.log("Establishing new SSE connection");let s=new ce("/messages",r);l.log(`New SSE connection established for sessionId ${s.sessionId}`),l.log("/sse request headers:",i.headers),l.log("/sse request body:",i.body),S.sse[s.sessionId]=s,r.on("close",()=>{delete S.sse[s.sessionId]}),await t.connect(s)}),o.post("/messages",async(i,r)=>{let s=i.query.sessionId,c=S.sse[s];if(c)l.log(`Received SSE message for sessionId ${s}`),l.log("/messages request headers:",i.headers),l.log("/messages request body:",i.body),await c.handlePostMessage(i,r);else{r.status(400).send(`No transport found for sessionId ${s}`);return}}),me=o.listen(e,()=>{l.log(`HTTP server listening on port ${e}`),l.log(`SSE endpoint available at http://localhost:${e}/sse`),l.log(`Message endpoint available at http://localhost:${e}/messages`),l.log(`StreamableHTTP endpoint available at http://localhost:${e}/mcp`)}),process.on("SIGINT",async()=>{l.log("Shutting down server..."),await L(S.sse),await L(S.streamable),l.log("Server shutdown complete"),process.exit(0)})}async function L(e){for(let t in e)try{await e[t]?.close(),delete e[t]}catch(o){console.error(`Error closing transport for session ${t}:`,o)}}import{McpServer as Ie}from"@modelcontextprotocol/sdk/server/mcp.js";import{z as h}from"zod";import A from"fs";import{isTruthy as M}from"remeda";function d(e,t,o){if(!(typeof t=="object"&&t!==null)||!(e in t))return!1;let i=t[e];return o?o(i):i!==void 0}function I(e){return typeof e=="object"&&!!e&&"clipsContent"in e&&typeof e.clipsContent=="boolean"}function k(e){return typeof e=="object"&&!!e&&"absoluteBoundingBox"in e&&typeof e.absoluteBoundingBox=="object"&&!!e.absoluteBoundingBox&&"x"in e.absoluteBoundingBox&&"y"in e.absoluteBoundingBox&&"width"in e.absoluteBoundingBox&&"height"in e.absoluteBoundingBox}function V(e,t){let o=["HORIZONTAL","VERTICAL"];return I(t)&&o.includes(t.layoutMode??"NONE")&&k(e)&&e.layoutPositioning!=="ABSOLUTE"}function z(e){return typeof e=="object"&&e!==null&&"top"in e&&"right"in e&&"bottom"in e&&"left"in e}function _(e,t){let o=t;return typeof t=="object"&&!!t&&e in o&&typeof o[e]=="object"&&!!o[e]&&"x"in o[e]&&"y"in o[e]&&"width"in o[e]&&"height"in o[e]}function W(e){return Array.isArray(e)&&e.length===4&&e.every(t=>typeof t=="number")}import x from"fs";import fe from"path";async function P(e,t,o){try{x.existsSync(t)||x.mkdirSync(t,{recursive:!0});let n=fe.join(t,e),i=await fetch(o,{method:"GET"});if(!i.ok)throw new Error(`Failed to download image: ${i.statusText}`);let r=x.createWriteStream(n),s=i.body?.getReader();if(!s)throw new Error("Failed to get response body");return new Promise((c,u)=>{let m=async()=>{try{for(;;){let{done:a,value:f}=await s.read();if(a){r.end();break}r.write(f)}}catch(a){r.end(),x.unlink(n,()=>{}),u(a)}};r.on("finish",()=>{c(n)}),r.on("error",a=>{s.cancel(),x.unlink(n,()=>{}),u(new Error(`Failed to write image: ${a.message}`))}),m()})}catch(n){let i=n instanceof Error?n.message:String(n);throw new Error(`Error downloading image: ${i}`)}}function R(e){if(typeof e!="object"||e===null)return e;if(Array.isArray(e))return e.map(o=>R(o));let t={};for(let o in e)if(Object.prototype.hasOwnProperty.call(e,o)){let n=e[o],i=R(n);i!==void 0&&!(Array.isArray(i)&&i.length===0)&&!(typeof i=="object"&&i!==null&&Object.keys(i).length===0)&&(t[o]=i)}return t}function U(e,t=1){let o=Math.round(e.r*255),n=Math.round(e.g*255),i=Math.round(e.b*255),r=Math.round(t*e.a*100)/100;return{hex:"#"+((1<<24)+(o<<16)+(n<<8)+i).toString(16).slice(1).toUpperCase(),opacity:r}}function F(e,t=1){let o=Math.round(e.r*255),n=Math.round(e.g*255),i=Math.round(e.b*255),r=Math.round(t*e.a*100)/100;return`rgba(${o}, ${n}, ${i}, ${r})`}function K(e="var"){let t="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",o="";for(let n=0;n<6;n++){let i=Math.floor(Math.random()*t.length);o+=t[i]}return`${e}_${o}`}function $(e,{ignoreZero:t=!0,suffix:o="px"}={}){let{top:n,right:i,bottom:r,left:s}=e;if(!(t&&n===0&&i===0&&r===0&&s===0))return n===i&&i===r&&r===s?`${n}${o}`:i===s?n===r?`${n}${o} ${i}${o}`:`${n}${o} ${i}${o} ${r}${o}`:`${n}${o} ${i}${o} ${r}${o} ${s}${o}`}function E(e){if(e.type==="IMAGE")return{type:"IMAGE",imageRef:e.imageRef,scaleMode:e.scaleMode};if(e.type==="SOLID"){let{hex:t,opacity:o}=U(e.color,e.opacity);return o===1?t:F(e.color,o)}else{if(["GRADIENT_LINEAR","GRADIENT_RADIAL","GRADIENT_ANGULAR","GRADIENT_DIAMOND"].includes(e.type))return{type:e.type,gradientHandlePositions:e.gradientHandlePositions,gradientStops:e.gradientStops.map(({position:t,color:o})=>({position:t,color:U(o)}))};throw new Error(`Unknown paint type: ${e.type}`)}}function T(e){return e.visible??!0}function w(e){if(isNaN(e))throw new TypeError("Input must be a valid number");return Number(Number(e).toFixed(2))}function J(e,t){let o=he(e),n=ye(e,t,o.mode)||{};return{...o,...n}}function q(e,t){if(t&&t.mode!=="none"){let{children:o,mode:n,axis:i}=t,r=ge(i,n);if(o.length>0&&o.reduce((c,u)=>c?"layoutPositioning"in u&&u.layoutPositioning==="ABSOLUTE"?!0:r==="horizontal"?"layoutSizingHorizontal"in u&&u.layoutSizingHorizontal==="FILL":r==="vertical"?"layoutSizingVertical"in u&&u.layoutSizingVertical==="FILL":!1:!1,!0))return"stretch"}switch(e){case"MIN":return;case"MAX":return"flex-end";case"CENTER":return"center";case"SPACE_BETWEEN":return"space-between";case"BASELINE":return"baseline";default:return}}function de(e){switch(e){case"MIN":return;case"MAX":return"flex-end";case"CENTER":return"center";case"STRETCH":return"stretch";default:return}}function X(e){if(e==="FIXED")return"fixed";if(e==="FILL")return"fill";if(e==="HUG")return"hug"}function ge(e,t){switch(e){case"primary":switch(t){case"row":return"horizontal";case"column":return"vertical"}case"counter":switch(t){case"row":return"horizontal";case"column":return"vertical"}}}function he(e){if(!I(e))return{mode:"none"};let t={mode:!e.layoutMode||e.layoutMode==="NONE"?"none":e.layoutMode==="HORIZONTAL"?"row":"column"},o=[];return e.overflowDirection?.includes("HORIZONTAL")&&o.push("x"),e.overflowDirection?.includes("VERTICAL")&&o.push("y"),o.length>0&&(t.overflowScroll=o),t.mode==="none"||(t.justifyContent=q(e.primaryAxisAlignItems??"MIN",{children:e.children,axis:"primary",mode:t.mode}),t.alignItems=q(e.counterAxisAlignItems??"MIN",{children:e.children,axis:"counter",mode:t.mode}),t.alignSelf=de(e.layoutAlign),t.wrap=e.layoutWrap==="WRAP"?!0:void 0,t.gap=e.itemSpacing?`${e.itemSpacing??0}px`:void 0,(e.paddingTop||e.paddingBottom||e.paddingLeft||e.paddingRight)&&(t.padding=$({top:e.paddingTop??0,right:e.paddingRight??0,bottom:e.paddingBottom??0,left:e.paddingLeft??0}))),t}function ye(e,t,o){if(!k(e))return;let n={mode:o};if(n.sizing={horizontal:X(e.layoutSizingHorizontal),vertical:X(e.layoutSizingVertical)},I(t)&&!V(e,t)&&(e.layoutPositioning==="ABSOLUTE"&&(n.position="absolute"),e.absoluteBoundingBox&&t.absoluteBoundingBox&&(n.locationRelativeToParent={x:w(e.absoluteBoundingBox.x-t.absoluteBoundingBox.x),y:w(e.absoluteBoundingBox.y-t.absoluteBoundingBox.y)})),_("absoluteBoundingBox",e)){let i={};o==="row"?(!e.layoutGrow&&e.layoutSizingHorizontal=="FIXED"&&(i.width=e.absoluteBoundingBox.width),e.layoutAlign!=="STRETCH"&&e.layoutSizingVertical=="FIXED"&&(i.height=e.absoluteBoundingBox.height)):o==="column"?(e.layoutAlign!=="STRETCH"&&e.layoutSizingHorizontal=="FIXED"&&(i.width=e.absoluteBoundingBox.width),!e.layoutGrow&&e.layoutSizingVertical=="FIXED"&&(i.height=e.absoluteBoundingBox.height),e.preserveRatio&&(i.aspectRatio=e.absoluteBoundingBox?.width/e.absoluteBoundingBox?.height)):((!e.layoutSizingHorizontal||e.layoutSizingHorizontal==="FIXED")&&(i.width=e.absoluteBoundingBox.width),(!e.layoutSizingVertical||e.layoutSizingVertical==="FIXED")&&(i.height=e.absoluteBoundingBox.height)),Object.keys(i).length>0&&(i.width&&(i.width=w(i.width)),i.height&&(i.height=w(i.height)),n.dimensions=i)}return n}function Y(e){return Object.fromEntries(Object.entries(e).map(([t,o])=>[t,{id:t,key:o.key,name:o.name,componentSetId:o.componentSetId}]))}function Z(e){return Object.fromEntries(Object.entries(e).map(([t,o])=>[t,{id:t,key:o.key,name:o.name,description:o.description}]))}function Q(e){let t={colors:[]};return d("strokes",e)&&Array.isArray(e.strokes)&&e.strokes.length&&(t.colors=e.strokes.filter(T).map(E)),d("strokeWeight",e)&&typeof e.strokeWeight=="number"&&e.strokeWeight>0&&(t.strokeWeight=`${e.strokeWeight}px`),d("strokeDashes",e)&&Array.isArray(e.strokeDashes)&&e.strokeDashes.length&&(t.strokeDashes=e.strokeDashes),d("individualStrokeWeights",e,z)&&(t.strokeWeight=$(e.individualStrokeWeights)),t}function te(e){if(!d("effects",e))return{};let t=e.effects.filter(u=>u.visible),o=t.filter(u=>u.type==="DROP_SHADOW").map(Se),n=t.filter(u=>u.type==="INNER_SHADOW").map(be),i=[...o,...n].join(", "),r=t.filter(u=>u.type==="LAYER_BLUR").map(ee).join(" "),s=t.filter(u=>u.type==="BACKGROUND_BLUR").map(ee).join(" "),c={};return i&&(e.type==="TEXT"?c.textShadow=i:c.boxShadow=i),r&&(c.filter=r),s&&(c.backdropFilter=s),c}function Se(e){return`${e.offset.x}px ${e.offset.y}px ${e.radius}px ${e.spread??0}px ${F(e.color)}`}function be(e){return`inset ${e.offset.x}px ${e.offset.y}px ${e.radius}px ${e.spread??0}px ${F(e.color)}`}function ee(e){return`blur(${e.radius}px)`}function N(e){let t={},o={},n;if("nodes"in e){let g=Object.values(e.nodes);g.forEach(p=>{p.components&&Object.assign(t,p.components),p.componentSets&&Object.assign(o,p.componentSets)}),n=g.map(p=>p.document)}else Object.assign(t,e.components),Object.assign(o,e.componentSets),n=e.document.children;let i=Y(t),r=Z(o),{name:s,lastModified:c,thumbnailUrl:u}=e,m={styles:{}},a=n.filter(T).map(g=>oe(m,g)).filter(g=>g!=null);return R({name:s,lastModified:c,thumbnailUrl:u||"",nodes:a,components:i,componentSets:r,globalVars:m})}function v(e,t,o){let[n]=Object.entries(e.styles).find(([r,s])=>JSON.stringify(s)===JSON.stringify(t))??[];if(n)return n;let i=K(o);return e.styles[i]=t,i}function oe(e,t,o){let{id:n,name:i,type:r}=t,s={id:n,name:i,type:r};if(r==="INSTANCE"&&(d("componentId",t)&&(s.componentId=t.componentId),d("componentProperties",t)&&(s.componentProperties=Object.entries(t.componentProperties??{}).map(([a,{value:f,type:g}])=>({name:a,value:f.toString(),type:g})))),d("style",t)&&Object.keys(t.style).length){let a=t.style,f={fontFamily:a.fontFamily,fontWeight:a.fontWeight,fontSize:a.fontSize,lineHeight:a.lineHeightPx&&a.fontSize?`${a.lineHeightPx/a.fontSize}em`:void 0,letterSpacing:a.letterSpacing&&a.letterSpacing!==0&&a.fontSize?`${a.letterSpacing/a.fontSize*100}%`:void 0,textCase:a.textCase,textAlignHorizontal:a.textAlignHorizontal,textAlignVertical:a.textAlignVertical};s.textStyle=v(e,f,"style")}if(d("fills",t)&&Array.isArray(t.fills)&&t.fills.length){let a=t.fills.map(E);s.fills=v(e,a,"fill")}let c=Q(t);c.colors.length&&(s.strokes=v(e,c,"stroke"));let u=te(t);Object.keys(u).length&&(s.effects=v(e,u,"effect"));let m=J(t,o);if(Object.keys(m).length>1&&(s.layout=v(e,m,"layout")),d("characters",t,M)&&(s.text=t.characters),d("opacity",t)&&typeof t.opacity=="number"&&t.opacity!==1&&(s.opacity=t.opacity),d("cornerRadius",t)&&typeof t.cornerRadius=="number"&&(s.borderRadius=`${t.cornerRadius}px`),d("rectangleCornerRadii",t,W)&&(s.borderRadius=`${t.rectangleCornerRadii[0]}px ${t.rectangleCornerRadii[1]}px ${t.rectangleCornerRadii[2]}px ${t.rectangleCornerRadii[3]}px`),d("children",t)&&t.children.length>0){let a=t.children.filter(T).map(f=>oe(e,f,t)).filter(f=>f!=null);a.length&&(s.children=a)}return r==="VECTOR"&&(s.type="IMAGE-SVG"),s}import{exec as xe}from"child_process";import{promisify as Te}from"util";var we=Te(xe);async function ie(e,t={}){try{let o=await fetch(e,t);if(!o.ok)throw new Error(`Fetch failed with status ${o.status}: ${o.statusText}`);return await o.json()}catch(o){l.log(`[fetchWithRetry] Initial fetch failed for ${e}: ${o.message}. Likely a corporate proxy or SSL issue. Attempting curl fallback.`);let i=`curl -s -S --fail-with-body -L ${ve(t.headers).join(" ")} "${e}"`;try{l.log(`[fetchWithRetry] Executing curl command: ${i}`);let{stdout:r,stderr:s}=await we(i);if(s){if(!r||s.toLowerCase().includes("error")||s.toLowerCase().includes("fail"))throw new Error(`Curl command failed with stderr: ${s}`);l.log(`[fetchWithRetry] Curl command for ${e} produced stderr (but might be informational): ${s}`)}if(!r)throw new Error("Curl command returned empty stdout.");return JSON.parse(r)}catch(r){throw l.error(`[fetchWithRetry] Curl fallback also failed for ${e}: ${r.message}`),o}}}function ve(e){return e?Object.entries(e).map(([t,o])=>`-H "${t}: ${o}"`):[]}import Ae from"js-yaml";var O=class{apiKey;oauthToken;useOAuth;baseUrl="https://api.figma.com/v1";constructor({figmaApiKey:t,figmaOAuthToken:o,useOAuth:n}){this.apiKey=t||"",this.oauthToken=o||"",this.useOAuth=!!n&&!!this.oauthToken}async request(t){try{l.log(`Calling ${this.baseUrl}${t}`);let o={};return this.useOAuth?(l.log("Using OAuth Bearer token for authentication"),o.Authorization=`Bearer ${this.oauthToken}`):(l.log("Using Personal Access Token for authentication"),o["X-Figma-Token"]=this.apiKey),await ie(`${this.baseUrl}${t}`,{headers:o})}catch(o){throw o instanceof Error?new Error(`Failed to make request to Figma API: ${o.message}`):new Error(`Failed to make request to Figma API: ${o}`)}}async getImageFills(t,o,n){if(o.length===0)return[];let i=[],r=`/files/${t}/images`,s=await this.request(r),{images:c={}}=s.meta;return i=o.map(async({imageRef:u,fileName:m})=>{let a=c[u];return a?P(m,n,a):""}),Promise.all(i)}async getImages(t,o,n,i,r){let s=o.filter(({fileType:p})=>p==="png").map(({nodeId:p})=>p),c=s.length>0?this.request(`/images/${t}?ids=${s.join(",")}&format=png&scale=${i}`).then(({images:p={}})=>p):{},u=o.filter(({fileType:p})=>p==="svg").map(({nodeId:p})=>p),m=[`ids=${u.join(",")}`,"format=svg",`svg_outline_text=${r.outlineText}`,`svg_include_id=${r.includeId}`,`svg_simplify_stroke=${r.simplifyStroke}`].join("&"),a=u.length>0?this.request(`/images/${t}?${m}`).then(({images:p={}})=>p):{},f=await Promise.all([c,a]).then(([p,y])=>({...p,...y})),g=o.map(({nodeId:p,fileName:y})=>{let b=f[p];return b?P(y,n,b):!1}).filter(p=>!!p);return Promise.all(g)}async getFile(t,o){try{let n=`/files/${t}${o?`?depth=${o}`:""}`;l.log(`Retrieving Figma file: ${t} (depth: ${o??"default"})`);let i=await this.request(n);l.log("Got response");let r=N(i);return C("figma-raw.yml",i),C("figma-simplified.yml",r),r}catch(n){throw console.error("Failed to get file:",n),n}}async getNode(t,o,n){let i=`/files/${t}/nodes?ids=${o}${n?`&depth=${n}`:""}`,r=await this.request(i);l.log("Got response from getNode, now parsing."),C("figma-raw.yml",r);let s=N(r);return C("figma-simplified.yml",s),s}};function C(e,t){try{if(process.env.NODE_ENV!=="development")return;let o="logs";try{A.accessSync(process.cwd(),A.constants.W_OK)}catch(n){l.log("Failed to write logs:",n);return}A.existsSync(o)||A.mkdirSync(o),A.writeFileSync(`${o}/${e}`,Ae.dump(t))}catch(o){console.debug("Failed to write logs:",o)}}import Re from"js-yaml";var Fe={name:"Figma MCP Server",version:"0.4.3"};function re(e,{isHTTP:t=!1,outputFormat:o="yaml"}={}){let n=new Ie(Fe),i=new O(e);return $e(n,i,o),l.isHTTP=t,n}function $e(e,t,o){e.tool("get_figma_data","When the nodeId cannot be obtained, obtain the layout information about the entire Figma file",{fileKey:h.string().describe("The key of the Figma file to fetch, often found in a provided URL like figma.com/(file|design)/<fileKey>/..."),nodeId:h.string().optional().describe("The ID of the node to fetch, often found as URL parameter node-id=<nodeId>, always use if provided"),depth:h.number().optional().describe("OPTIONAL. Do NOT use unless explicitly requested by the user. Controls how many levels deep to traverse the node tree,")},async({fileKey:n,nodeId:i,depth:r})=>{try{l.log(`Fetching ${r?`${r} layers deep`:"all layers"} of ${i?`node ${i} from file`:"full file"} ${n}`);let s;i?s=await t.getNode(n,i,r):s=await t.getFile(n,r),l.log(`Successfully fetched file: ${s.name}`);let{nodes:c,globalVars:u,...m}=s,a={metadata:m,nodes:c,globalVars:u};l.log(`Generating ${o.toUpperCase()} result from file`);let f=o==="json"?JSON.stringify(a,null,2):Re.dump(a);return l.log("Sending result to client"),{content:[{type:"text",text:f}]}}catch(s){let c=s instanceof Error?s.message:JSON.stringify(s);return l.error(`Error fetching file ${n}:`,c),{isError:!0,content:[{type:"text",text:`Error fetching file: ${c}`}]}}}),e.tool("download_figma_images","Download SVG and PNG images used in a Figma file based on the IDs of image or icon nodes",{fileKey:h.string().describe("The key of the Figma file containing the node"),nodes:h.object({nodeId:h.string().describe("The ID of the Figma image node to fetch, formatted as 1234:5678"),imageRef:h.string().optional().describe("If a node has an imageRef fill, you must include this variable. Leave blank when downloading Vector SVG images."),fileName:h.string().describe("The local name for saving the fetched file")}).array().describe("The nodes to fetch as images"),pngScale:h.number().positive().optional().default(2).describe("Export scale for PNG images. Optional, defaults to 2 if not specified. Affects PNG images only."),localPath:h.string().describe("The absolute path to the directory where images are stored in the project. If the directory does not exist, it will be created. The format of this path should respect the directory format of the operating system you are running on. Don't use any special character escaping in the path name either."),svgOptions:h.object({outlineText:h.boolean().optional().default(!0).describe("Whether to outline text in SVG exports. Default is true."),includeId:h.boolean().optional().default(!1).describe("Whether to include IDs in SVG exports. Default is false."),simplifyStroke:h.boolean().optional().default(!0).describe("Whether to simplify strokes in SVG exports. Default is true.")}).optional().default({}).describe("Options for SVG export")},async({fileKey:n,nodes:i,localPath:r,svgOptions:s,pngScale:c})=>{try{let u=i.filter(({imageRef:y})=>!!y),m=t.getImageFills(n,u,r),a=i.filter(({imageRef:y})=>!y).map(({nodeId:y,fileName:b})=>({nodeId:y,fileName:b,fileType:b.endsWith(".svg")?"svg":"png"})),f=t.getImages(n,a,r,c,s),g=await Promise.all([m,f]).then(([y,b])=>[...y,...b]);return{content:[{type:"text",text:!g.find(y=>!y)?`Success, ${g.length} images downloaded: ${g.join(", ")}`:"Failed"}]}}catch(u){return l.error(`Error downloading images from file ${n}:`,u),{isError:!0,content:[{type:"text",text:`Error downloading images: ${u}`}]}}})}Ce({path:Oe(process.cwd(),".env")});async function ke(){let e=process.env.NODE_ENV==="cli"||process.argv.includes("--stdio"),t=H(e),o=re(t.auth,{isHTTP:!e,outputFormat:t.outputFormat});if(e){let n=new Ee;await o.connect(n)}else console.log(`Initializing Figma MCP Server in HTTP mode on port ${t.port}...`),await j(t.port,o)}process.argv[1]&&ke().catch(e=>{console.error("Failed to start server:",e),process.exit(1)});export{H as a,re as b,ke as c};
