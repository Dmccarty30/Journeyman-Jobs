export var SearchService;
(function (SearchService) {
    SearchService["GOOGLE"] = "google";
    SearchService["BING"] = "bing";
    SearchService["DUCKDUCKGO"] = "duckduckgo";
    SearchService["YAHOO"] = "yahoo";
    SearchService["GITHUB"] = "github";
    SearchService["YOUTUBE"] = "youtube";
    SearchService["X"] = "x";
    SearchService["REDDIT"] = "reddit";
    SearchService["ARXIV"] = "arxiv";
    SearchService["WECHAT"] = "wechat";
    SearchService["BILIBILI"] = "bilibili";
    SearchService["IMDB"] = "imdb";
    SearchService["WIKIPEDIA"] = "wikipedia";
})(SearchService || (SearchService = {}));
export var NewsService;
(function (NewsService) {
    NewsService["GOOGLE"] = "google";
    NewsService["BING"] = "bing";
    NewsService["DUCKDUCKGO"] = "duckduckgo";
    NewsService["YAHOO"] = "yahoo";
    NewsService["HACKERNEWS"] = "hackernews";
})(NewsService || (NewsService = {}));
export var TimeRange;
(function (TimeRange) {
    TimeRange["DAY"] = "day";
    TimeRange["MONTH"] = "month";
    TimeRange["YEAR"] = "year";
})(TimeRange || (TimeRange = {}));
export function isValidSearchArgs(args) {
    if (typeof args !== 'object' || args === null) {
        return false;
    }
    const { query, max_results, search_service, crawl_results, include_sites, exclude_sites, time_range } = args;
    if (typeof query !== 'string' || query.trim().length === 0) {
        return false;
    }
    if (max_results !== undefined && (typeof max_results !== 'number' || max_results < 1 || max_results > 50)) {
        return false;
    }
    if (search_service !== undefined) {
        const validServices = Object.values(SearchService);
        if (!validServices.includes(search_service)) {
            return false;
        }
    }
    if (crawl_results !== undefined && (typeof crawl_results !== 'number' || crawl_results < 0)) {
        return false;
    }
    if (include_sites !== undefined && (!Array.isArray(include_sites) || !include_sites.every(site => typeof site === 'string'))) {
        return false;
    }
    if (exclude_sites !== undefined && (!Array.isArray(exclude_sites) || !exclude_sites.every(site => typeof site === 'string'))) {
        return false;
    }
    if (time_range !== undefined) {
        const validTimeRanges = Object.values(TimeRange);
        if (!validTimeRanges.includes(time_range)) {
            return false;
        }
    }
    return true;
}
export function isValidCrawlArgs(args) {
    if (typeof args !== 'object' || args === null) {
        return false;
    }
    const { url } = args;
    if (typeof url !== 'string' || url.trim().length === 0) {
        return false;
    }
    return true;
}
export function isValidSitemapArgs(args) {
    if (typeof args !== 'object' || args === null) {
        return false;
    }
    const { url } = args;
    if (typeof url !== 'string' || url.trim().length === 0) {
        return false;
    }
    return true;
}
export function isValidNewsArgs(args) {
    if (typeof args !== 'object' || args === null) {
        return false;
    }
    const { query, max_results, search_service, crawl_results, include_sites, exclude_sites, time_range } = args;
    if (typeof query !== 'string' || query.trim().length === 0) {
        return false;
    }
    if (max_results !== undefined && (typeof max_results !== 'number' || max_results < 1 || max_results > 50)) {
        return false;
    }
    if (search_service !== undefined) {
        const validServices = Object.values(NewsService);
        if (!validServices.includes(search_service)) {
            return false;
        }
    }
    if (crawl_results !== undefined && (typeof crawl_results !== 'number' || crawl_results < 0)) {
        return false;
    }
    if (include_sites !== undefined && (!Array.isArray(include_sites) || !include_sites.every(site => typeof site === 'string'))) {
        return false;
    }
    if (exclude_sites !== undefined && (!Array.isArray(exclude_sites) || !exclude_sites.every(site => typeof site === 'string'))) {
        return false;
    }
    if (time_range !== undefined) {
        const validTimeRanges = Object.values(TimeRange);
        if (!validTimeRanges.includes(time_range)) {
            return false;
        }
    }
    return true;
}
export function isValidReasoningArgs(args) {
    if (typeof args !== 'object' || args === null) {
        return false;
    }
    const { content } = args;
    if (typeof content !== 'string' || content.trim().length === 0) {
        return false;
    }
    return true;
}
export var TrendingService;
(function (TrendingService) {
    TrendingService["GITHUB"] = "github";
    TrendingService["HACKERNEWS"] = "hackernews";
})(TrendingService || (TrendingService = {}));
export function isValidTrendingArgs(args) {
    if (typeof args !== 'object' || args === null) {
        return false;
    }
    const { search_service, max_results } = args;
    if (search_service === undefined) {
        return false;
    }
    const validServices = Object.values(TrendingService);
    if (!validServices.includes(search_service)) {
        return false;
    }
    if (max_results !== undefined && (typeof max_results !== 'number' || max_results < 1 || max_results > 50)) {
        return false;
    }
    return true;
}
