// Mocks generated by Mockito 5.4.6 from annotations
// in journeyman_jobs/test/features/job_sharing/widgets/contact_picker_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:contacts_service/contacts_service.dart' as _i4;
import 'package:journeyman_jobs/features/job_sharing/services/contact_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeContactLoadResult_0 extends _i1.SmartFake
    implements _i2.ContactLoadResult {
  _FakeContactLoadResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ContactService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactService extends _i1.Mock implements _i2.ContactService {
  MockContactService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> hasContactsPermission() => (super.noSuchMethod(
        Invocation.method(
          #hasContactsPermission,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i2.ContactPermissionResult> requestContactsPermission() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestContactsPermission,
          [],
        ),
        returnValue: _i3.Future<_i2.ContactPermissionResult>.value(
            _i2.ContactPermissionResult.granted),
      ) as _i3.Future<_i2.ContactPermissionResult>);

  @override
  _i3.Future<_i2.ContactLoadResult> loadContacts({
    bool? requireEmailOrPhone = true,
    bool? withThumbnails = false,
    bool? photoHighResolution = false,
    String? searchQuery,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadContacts,
          [],
          {
            #requireEmailOrPhone: requireEmailOrPhone,
            #withThumbnails: withThumbnails,
            #photoHighResolution: photoHighResolution,
            #searchQuery: searchQuery,
          },
        ),
        returnValue:
            _i3.Future<_i2.ContactLoadResult>.value(_FakeContactLoadResult_0(
          this,
          Invocation.method(
            #loadContacts,
            [],
            {
              #requireEmailOrPhone: requireEmailOrPhone,
              #withThumbnails: withThumbnails,
              #photoHighResolution: photoHighResolution,
              #searchQuery: searchQuery,
            },
          ),
        )),
      ) as _i3.Future<_i2.ContactLoadResult>);

  @override
  bool isExistingPlatformUser(
    _i4.Contact? contact,
    List<String>? existingUsers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isExistingPlatformUser,
          [
            contact,
            existingUsers,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<_i2.ContactInfo> extractContactInfo(List<_i4.Contact>? contacts) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractContactInfo,
          [contacts],
        ),
        returnValue: <_i2.ContactInfo>[],
      ) as List<_i2.ContactInfo>);

  @override
  String getContactInitials(_i4.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #getContactInitials,
          [contact],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #getContactInitials,
            [contact],
          ),
        ),
      ) as String);

  @override
  String formatPhoneNumber(String? phoneNumber) => (super.noSuchMethod(
        Invocation.method(
          #formatPhoneNumber,
          [phoneNumber],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #formatPhoneNumber,
            [phoneNumber],
          ),
        ),
      ) as String);
}
