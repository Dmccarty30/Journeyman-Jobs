rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === Helper Functions ===
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Checks if the requesting user is a member of a specific crew via the roles map.
    function isCrewMember(crewId) {
      return isAuthenticated() && get(/databases/$(database)/documents/crews/$(crewId)).data.roles[request.auth.uid] != null;
    }

    // Checks if the requesting user is the foreman of a specific crew.
    function isCrewForeman(crewId) {
      return isAuthenticated() && get(/databases/$(database)/documents/crews/$(crewId)).data.roles[request.auth.uid] == 'foreman';
    }

    // === Collection Rules ===

    // Users can only read/write their own data.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.uid == userId;
    }

    // Crews collection rules
    match /crews/{crewId} {
      // Any authenticated user can create a crew if they are assigning themselves as the foreman.
      allow create: if isAuthenticated() && request.resource.data.roles[request.auth.uid] == 'foreman';

      // A user can get a specific crew document only if they are a member of that crew.
      allow get: if isCrewMember(crewId);
      // Any authenticated user can query/list the crews collection.
      allow list: if isAuthenticated();

      // Only the foreman can update a crew, and they cannot change the foreman role map directly.
      allow update: if isCrewForeman(crewId)
                    && request.resource.data.roles == resource.data.roles; // Prevent changing roles map directly

      // Deletes are not allowed.
      allow delete: if false;
    }

    // Global counters - authenticated users can read/write global counter documents
    match /counters/{counterDoc} {
      allow read, write: if isAuthenticated();
      allow delete: if false;
    }

    // Public, read-only collections
    match /jobs/{jobId} {
      allow read: if isAuthenticated();
      allow write: if false;
    }

    match /locals/{localId} {
      allow read: if true;
      allow write: if false;
    }

    // Counters collection rules - users can only access their own counters
    match /counters/{counterType}/{subType}/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create, update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false;
    }
  }
}